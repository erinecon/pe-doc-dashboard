# Generated by Django 5.1.5 on 2025-02-04 15:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("framework", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProjectGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "owner",
                    models.CharField(
                        blank=True,
                        help_text="Usually the engineering manager or director",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "driver",
                    models.CharField(
                        blank=True,
                        help_text="Usually a technical author",
                        max_length=200,
                        null=True,
                    ),
                ),
                ("last_review", models.DateField(blank=True, null=True)),
                (
                    "last_review_status",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="framework.projectstatus",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="projects.projectgroup",
                    ),
                ),
            ],
            options={
                "ordering": ["group", "name"],
            },
        ),
        migrations.CreateModel(
            name="ProjectObjective",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "if_not_started",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("na", "na"),
                            ("PL", "Planned"),
                            ("DE", "Deferred"),
                            ("BL", "Blocked"),
                            ("IN", "Inactive"),
                        ],
                        help_text="Will be overridden by <em>Status</em> if appropriate",
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "objective",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="framework.objective",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "ordering": ["project", "objective"],
            },
        ),
        migrations.AddField(
            model_name="project",
            name="objectives",
            field=models.ManyToManyField(
                through="projects.ProjectObjective", to="framework.objective"
            ),
        ),
        migrations.CreateModel(
            name="ProjectObjectiveCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("done", models.BooleanField(default=False)),
                (
                    "condition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="framework.condition",
                    ),
                ),
                (
                    "objective",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="framework.objective",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "ordering": ["project", "objective", "condition"],
            },
        ),
        migrations.CreateModel(
            name="QI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.SmallIntegerField(default=0)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.project",
                    ),
                ),
                (
                    "workcycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="framework.workcycle",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LevelCommitment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("committed", models.BooleanField(default=False)),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="framework.level",
                    ),
                ),
                (
                    "objective",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="framework.objective",
                    ),
                ),
                (
                    "work_cycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="framework.workcycle",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "ordering": ["work_cycle", "level"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("project", "objective", "work_cycle", "level"),
                        name="unique_level_attributes",
                    )
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="projectobjective",
            constraint=models.UniqueConstraint(
                fields=("project", "objective"), name="unique_project_objective"
            ),
        ),
        migrations.AddConstraint(
            model_name="projectobjectivecondition",
            constraint=models.UniqueConstraint(
                fields=("project", "objective", "condition"),
                name="unique_project_objective_condition",
            ),
        ),
    ]
